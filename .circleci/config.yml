version: 2.1

executors:
  cci-toolbox-java11:
    docker:
      - image: eu.gcr.io/entur-system-1287/circleci-toolbox-image-java11
        auth:
          username: _json_key
          password: $DOCKER_PASSWORD
    environment:
      DEBIAN_FRONTEND: "noninteractive"
      MAVEN_OPTS: -Xmx3G
aliases:
  - &GCP-auth
    name: GCP Authenticate
    command: |
      echo 'export GCLOUD_SERVICE_KEY="$GCLOUD_SERVICE_KEY"' >> $BASH_ENV
      /tools/gcp_authenticate.sh
  - &docker-login
    name: Docker login
    command: |
      docker login -u "_json_key" -p "${DOCKER_PASSWORD}" eu.gcr.io
  - &tag-git-version
    name: Tag git commit with build version and push to github
    command: |
      git config --global user.email "circleci@entur.no"
      git config --global user.name "circleci"
      git tag $VERSION
      git push origin $VERSION
  - &create-image-version
    name: Create new image version and store to env var and as file in workspace
    command: |
      echo "export VERSION=$CIRCLE_BRANCH-v$CIRCLE_BUILD_NUM-$(echo -n $CIRCLE_SHA1 | tail -c 8)"  >> $BASH_ENV
      echo "$CIRCLE_BRANCH-v$CIRCLE_BUILD_NUM-$(echo -n $CIRCLE_SHA1 | tail -c 8)" > version
  - &read-image-version
    name: Read new image version from workspace
    command: |
      echo "export VERSION=$(cat ./version)" >> $BASH_ENV
  - &docker-build-and-push
    name: Docker build and push
    command: |
      IMAGE="eu.gcr.io/entur-system-1287/otp"
      echo "Image: ${IMAGE}"
      docker build -t $IMAGE .
      docker tag $IMAGE "${IMAGE}":"${VERSION}"
      docker push $IMAGE

  - &save-test-results
    name: Save test results
    command: |
      mkdir -p ~/reports/{junit,owasp}
      find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/reports/junit/ \;
      find . -type f -regex ".*/target/owasp-reports/.*" -exec cp {} ~/reports/owasp/ \;

    when: always

jobs:
  test:
    executor: cci-toolbox-java11
    steps:
      - checkout
      - restore_cache:
          key: dep-cache-{{ checksum "pom.xml" }}
      - run: mvn org.apache.maven.plugins:maven-dependency-plugin:3.1.0:go-offline -s /tools/m2/settings.xml
      - save_cache:
          paths:
            - ~/.m2
          key: dep-cache-{{ checksum "pom.xml" }}
      - run: mvn test -s /tools/m2/settings.xml
      - run: *save-test-results
      - store_test_results:
          path: ~/reports
      - store_artifacts:
          path: ~/reports
  build:
    executor: cci-toolbox-java11
    steps:
      - checkout
      - restore_cache:
          key: dep-cache-{{ checksum "pom.xml" }}
      - run: mvn org.apache.maven.plugins:maven-dependency-plugin:3.1.0:go-offline -s /tools/m2/settings.xml
      - save_cache:
          paths:
            - ~/.m2
          key: dep-cache-{{ checksum "pom.xml" }}
      - run: *create-image-version
      - run: *tag-git-version
      # Cannot use -o because of snapshot dependencies.
      - run: mvn deploy -s /tools/m2/settings.xml -DskipTests
      - persist_to_workspace:
          root: ~/project
          paths:
            - target
            - pom.xml
            - .circleci
            - helm/*/
            - ./version
            - Dockerfile
            - docker
  publish-docker:
    docker:
      - image: eu.gcr.io/entur-system-1287/circleci-toolbox-image-java11
        auth:
          username: _json_key
          password: $DOCKER_PASSWORD
    environment:
      DEBIAN_FRONTEND: "noninteractive"
    steps:
      - attach_workspace:
          at: ~/project
      - setup_remote_docker:
          docker_layer_caching: true
      - run: *GCP-auth
      - run: *docker-login
      - run: *read-image-version
      - run: *docker-build-and-push

workflows:
  version: 2.1
  release:
    jobs:
      - test:
          name: test-release
          context: dev
      - build:
          name: build-release
          context: dev
          filters:
            branches:
              only:
                - rutebanken_develop
          requires:
            - test-release
      - publish-docker:
          name: publish-docker
          context: org-carbon
          filters:
            branches:
              only:
                - rutebanken_develop
          requires:
            - build-release